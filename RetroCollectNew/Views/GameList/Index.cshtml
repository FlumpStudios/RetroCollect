
@{
    ViewData["Title"] = "Games games games";
}

<!DOCTYPE html>
<html lang="en-US">

<body id="top" style="padding-top:5%;">  
    <div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
        <a asp-area="" asp-controller="Home" asp-action="Contact" id="contact-button" class="mdl-button mdl-button--fab mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--accent mdl-color-text--accent-contrast mdl-shadow--4dp"><i class="material-icons">mail</i></a>

        <div class="mdl-layout__drawer mdl-layout--small-screen-only">
            <nav class="mdl-navigation mdl-typography--body-1-force-preferred-font">
                <a class="mdl-navigation__link" href="index.html">Home</a><a class="mdl-navigation__link" href="portfolio.html">Portfolio</a>
                <a class="mdl-navigation__link" href="contact.html">Contact</a>
            </nav>
        </div>
        <main class="mdl-layout__content red-fade">
            <div class="site-content">
                <div class="container">

                    <div class="full-games-list row">
                        <div>

                            <div>
                                <br />
                                <br />
                                @using JA.Pagination.MVC6
                                @model ModelData.Responses.GameListResponse
                                @*@using X.PagedList;*@
                                @{
                                    ViewData["Title"] = "Index";
                                }

                                <p>

                                    @Html.HiddenFor(x => x.CurrentOrderBy)
                                    @Html.HiddenFor(x => x.LastPage)


                                    @if (Model.IsAdmin)
                                    {
                                        <a asp-action="Create">Create New</a>
                                    }


                                    <!--Searching and filtering controls-->
                            </div>
                            @using (Html.BeginForm("Index", "GameList", FormMethod.Get, new { id = "game-form" }))
                            {
                                <div class="col-xs-8">
                                    @Html.TextBox("searchText", null, new { @class = "form-control" })
                                    @Html.Hidden("showClientList", false)
                                </div>
                                <button id="search-submit-button" type="submit" class="btn btn-primary col-sm-4 fa fa-search"></button>


                                <br />
                                <br />
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <br />
                                            <div class="dropdown">
                                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    Console
                                                </button>

                                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <a id="All" value="All" class="dropdown-item console-selection" href="#">All</a> <br />
                                                    @foreach (var items in Model.ConsoleList)
                                                    {
                                                        @if (!string.IsNullOrEmpty(items.Value))
                                                        {
                                                            <a id="@items.Key" value="@items.Value" class="dropdown-item console-selection" href="#">@items.Value</a> <br />
                                                        }
                                                    }
                                                    <a id="Other" value="Other" class="dropdown-item console-selection" href="#">Other</a> <br />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-2">

                                            <div class="form-group">
                                                <label>From date</label>
                                                <div class="input-group date" data-date-format="dd/mm/yyyy">
                                                    <input type="text" value="@Model.FromDate" id="fromDate" name="fromDate" class="form-control" placeholder="dd/mm/yyyy">
                                                    <div class="input-group-addon">
                                                        <span class="glyphicon glyphicon-th"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-2">
                                            <div class="form-group">
                                                <label>To date</label>
                                                <div class="input-group date" data-date-format="dd/mm/yyyy">
                                                    <input type="text" value="@Model.ToDate" id="toDate" name="toDate" class="form-control" placeholder="dd/mm/yyyy">
                                                    <div class="input-group-addon">
                                                        <span class="glyphicon glyphicon-th"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-2">
                                            <br />
                                            <button class="btn btn-primary" type="submit">Go!</button>
                                        </div>

                                        </div>
                           
                                    @Html.HiddenFor(x => x.ShowClientList)
                                    @Html.HiddenFor(x => x.Page)
                                    @Html.HiddenFor(x => x.SortingOptions)
                                    @Html.HiddenFor(x => x.Platform)
                                    @Html.Hidden("switchsort", false)
                                </div>
                                <br />
                                <br />
                            }
                          
                            <div class="col-sm-12">
                                <ul class="nav nav-tabs">
                                    <li id="show-all-games" class="@(@Model.ShowClientList ? "" : "active")"><a data-toggle="tab" href="#home">@(string.IsNullOrEmpty(Model.Platform) || Model.Platform == "Other" ? Model.Platform == "Other" ? "Other" : "All" : Model.ConsoleList[Model.Platform]) Games </a></li>
                                    @if (Model.IsLoggedIn)
                                    {
                                        <li id="show-my-collection" class="@(@Model.ShowClientList ? "active" : "")"><a data-toggle="tab" href="#menu1">Your Collection  </a></li>
                                    }
                                </ul> 


                                <table class="table table-striped table-hove table-bordered">

                                    <thead>
                                        <tr>
                                            @foreach (var columnName in Model.ColumnNames)
                                            {
                                                <th id="@columnName" class="@(columnName.Contains("Cover") ? "" : "sorting-headers") ">
                                                    @columnName @if(!columnName.Contains("Cover")){<i class="fa fa-sort-down"></i>}
                                                </th>}
                                            <th></th>
                                            @if (Model.IsLoggedIn)
                                            {
                                                <th></th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.GameListModel)
                                        {
                                            <tr>
                                                <td>
                                                    @if (item.Cover != null)
                                                    {
                                                    <img src="@item.Cover.Url" />
                                                    }
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.First_release_date)

                                                </td>
                                                <td>
                                                    @if (item.Rating > 0)
                                                    {
                                                        @Html.DisplayFor(modelItem => item.Rating)
                                                    }
                                                    else
                                                    {
                                                        <text>No rating available</text>
                                                    }
                                                </td>

                                                <td>                                                  
                                                        @Html.DisplayFor(modelItem => item.Popularity)
                                                </td>

                                                @if (Model.IsLoggedIn)
                                                {
                                                    <td class="text-center">
                                                        @if (Model.ShowClientList)
                                                        {
                                                            <text>
                                                                <i id="@item.Id" class="fa fa-minus add-remove-icon delete-game"></i>
                                                            </text>
                                                        }
                                                        else
                                                        {
                                                            <text>
                                                                <i id="@item.Id" class="fa fa-plus add-remove-icon add-new-game" data-formatList="@string.Join(",",@item.Platforms)"></i>
                                                           </text>
                                                        }
                                                    </td>
                                                }


                                                <td>

                                                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                                                    @if (Model.IsAdmin)
                                                    {
                                                        <text>
                                                            |
                                                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                                                        </text>
                                                    }

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <div>
                                    <div>
                                        @if (Model.GameListModel.Count() < 1)
                                        {
                                            <text><div class="warning-text small">No items found</div> </text>
                                        }
                                        <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->

                                        @*<div class="pagination-container">                                                     
                                            @Html.RenderPager((int)Model.Page + 1, Model.LastPage)
                                        </div>*@
                                        <div class="pagination-container">
                                            <button class="pagination-button btn btn-primary" id="page-down" type="button" @(Model.Page == 0 ? "disabled" : "") >Prev</button>
                                            <text>Page @(Model.Page + 1)</text>
                                            @* TODO: Replace hardcoded 50 with item per page count *@
                                            <button class="pagination-button btn btn-primary" id="page-up" type="button"  @(Model.GameListModel.Count() < Model.ResultsPerPage  ? "disabled" : "") >Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
</div>
    <!-- Trigger the modal with a button -->
   

    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        
                        @foreach (var items in Model.ConsoleList)
                        {
                            <div class="col-xs-12 col-md-6 col-lg-4 format-list" id="format-container-@items.Key" data-formatid="@items.Key" >
                                <label for="gamelistItem-@items.Key"><input name="formtCheckBoxes" type="checkbox" id="gamelistItem-@items.Key"/>  @items.Value  </label>
                            </div>                            
                        }
                        <div class="col-xs-12 col-md-6 col-lg-4 format-list-other" id="format-container-10000">
                            <label for="gamelistItem-10000"><input type="checkbox" id="gamelistItem-10000" data-format-id="10000" />  Other  </label>
                         </div>
                       
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" id="add-game-cancel" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" id="add-game-accept" class="btn btn-primary" data-dismiss="modal">Add Game</button>
                </div>
            </div>

        </div>
    </div>
</body>
</html>

<script>
    $('.input-group.date').datepicker({ format: "dd/mm/yyyy" });
    $.fn.datepicker.defaults.startDate = "-3y";
</script>

<style>
    .format-list {
        display:none;
    }
</style>