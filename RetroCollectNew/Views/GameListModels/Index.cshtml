@model RetroCollectNew.Models.ViewModels.ListView

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    @if (Model.IsLoggedIn)
    {
        <a asp-action="Create">Create New</a>
    }

    <!--Searching and filtering controls-->

    @using (Html.BeginForm("Index", "GameListModels", FormMethod.Get, new { id = "game-form" }))
    {
        @Html.TextBox("searchText")
        @Html.CheckBox("showClientList", false)
        <button type="submit">Search</button>


        @foreach (var items in Model.ConsoleList)
        {
            <button class="button_link" name="format" value="@items">@items</button>        
            @Html.Hidden("sortingOptions", "Name");
            @Html.Hidden("switchsort", Model.ReversedList);
           
        }
    }

</p>
<button id="add-game">add game</button>
<table class="table">
    
    <thead>
        <tr>
                <th id="Name" class="sorting-headers">
                    Name <i class="fa fa-sort-down"></i>
                </th>
                <th id="Developer" class="sorting-headers">
                   Developer <i class="fa fa-sort-down"></i>
                </th>
                <th id="Genre" class="sorting-headers">
                    Genre <i class="fa fa-sort-down"></i>
                </th>
                <th id="Publisher" class="sorting-headers">
                    Publisher <i class="fa fa-sort-down"></i>
                </th>
   
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.GameListModel)
{
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Developer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher)
            </td>
            <td>
               @if (Model.IsLoggedIn)
               {
                 <text>     
                    <i id="@item.Id" class="fa fa-plus add-new-game"></i>
                 </text>    
                }
                
            </td>

            <td>

             <a asp-action="Details" asp-route-id="@item.Id">Details</a> 

             @if (Model.IsLoggedIn)
             {
                <text>
                |
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </text>
            }

            </td>
        </tr>
}
    </tbody>
</table>

<script>
    $(document).ready(function () {

       

        $('.add-new-game').click(function (data) {
            var clientListModel = { gameId: this.id };
            console.log(clientListModel);          

            $.post("/ClientGamesList/Create", clientListModel, function (data, status) {
                console.log(data);
                console.log(status);
                if (status === "success") { alert("Game added to your library") }
                else { alert("There was an error adding game to your library") };
            });
        });

        
        $('.sorting-headers').click(function (data) {

            var sortSwitch = $('#switchsort').val();
            if (sortSwitch) sortSwitch = false;
            else sortSwitch = true;

            $('#sortingOptions').val(this.id);
            $('#switchsort').val(sortSwitch);
            $('#game-form').submit();
        });
    });
   
</script>